{"version":3,"file":"js/749.a767c5b2.js","mappings":"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","sources":["webpack://editcode/./src/views/home/index.vue","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/Utils.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Canvas.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Random.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Options/Classes/Options.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Particle.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Point.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Range.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Particles.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Retina.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Container.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Loader.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","webpack://editcode/./node_modules/tsparticles-engine/esm/engine.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","webpack://editcode/./node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","webpack://editcode/./node_modules/tsparticles-engine/esm/index.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","webpack://editcode/./node_modules/tsparticles-plugin-absorbers/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-destroy/esm/index.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Emitters.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","webpack://editcode/./node_modules/tsparticles-plugin-emitters/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","webpack://editcode/./node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","webpack://editcode/./node_modules/tsparticles-interaction-external-trail/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","webpack://editcode/./node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","webpack://editcode/./node_modules/tsparticles-updater-roll/esm/RollUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-roll/esm/index.js","webpack://editcode/./node_modules/tsparticles-particles.js/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","webpack://editcode/./node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","webpack://editcode/./node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-angle/esm/index.js","webpack://editcode/./node_modules/tsparticles-move-base/esm/Utils.js","webpack://editcode/./node_modules/tsparticles-move-base/esm/BaseMover.js","webpack://editcode/./node_modules/tsparticles-move-base/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-circle/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-color/esm/ColorUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-color/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","webpack://editcode/./node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","webpack://editcode/./node_modules/tsparticles-interaction-external-attract/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bounce/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","webpack://editcode/./node_modules/tsparticles-interaction-external-bubble/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","webpack://editcode/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","webpack://editcode/./node_modules/tsparticles-interaction-external-connect/esm/Connector.js","webpack://editcode/./node_modules/tsparticles-interaction-external-connect/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","webpack://editcode/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","webpack://editcode/./node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","webpack://editcode/./node_modules/tsparticles-interaction-external-grab/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","webpack://editcode/./node_modules/tsparticles-interaction-external-pause/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","webpack://editcode/./node_modules/tsparticles-interaction-external-push/esm/Pusher.js","webpack://editcode/./node_modules/tsparticles-interaction-external-push/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","webpack://editcode/./node_modules/tsparticles-interaction-external-remove/esm/Remover.js","webpack://editcode/./node_modules/tsparticles-interaction-external-remove/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","webpack://editcode/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","webpack://editcode/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","webpack://editcode/./node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","webpack://editcode/./node_modules/tsparticles-interaction-external-repulse/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","webpack://editcode/./node_modules/tsparticles-interaction-external-slow/esm/Slower.js","webpack://editcode/./node_modules/tsparticles-interaction-external-slow/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-image/esm/Utils.js","webpack://editcode/./node_modules/tsparticles-shape-image/esm/ImageDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-image/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","webpack://editcode/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","webpack://editcode/./node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","webpack://editcode/./node_modules/tsparticles-updater-life/esm/LifeUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-life/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-line/esm/LineDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-line/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-opacity/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/Utils.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-out-modes/esm/index.js","webpack://editcode/./node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","webpack://editcode/./node_modules/tsparticles-move-parallax/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-attract/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-collisions/esm/index.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/Linker.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/interaction.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/Utils.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/plugin.js","webpack://editcode/./node_modules/tsparticles-interaction-particles-links/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","webpack://editcode/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-polygon/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-size/esm/SizeUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-size/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-square/esm/SquareDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-square/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-star/esm/StarDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-star/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-stroke-color/esm/index.js","webpack://editcode/./node_modules/tsparticles-shape-text/esm/TextDrawer.js","webpack://editcode/./node_modules/tsparticles-shape-text/esm/index.js","webpack://editcode/./node_modules/tsparticles-slim/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","webpack://editcode/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","webpack://editcode/./node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-tilt/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","webpack://editcode/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","webpack://editcode/./node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-twinkle/esm/index.js","webpack://editcode/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","webpack://editcode/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","webpack://editcode/./node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","webpack://editcode/./node_modules/tsparticles-updater-wobble/esm/index.js","webpack://editcode/./node_modules/tsparticles/esm/index.js","webpack://editcode/./src/utils/useTimer.js","webpack://editcode/./src/views/home/index.vue?ed4e"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <!-- 头部 -->\r\n    <div class=\"header\">\r\n      <div class=\"login w\">\r\n        <span class=\"time\">{{ currentTime }}</span>\r\n        <div class=\"buttons\">\r\n          <a-button size=\"large\" type=\"text\" @click=\"handleLogin\"\r\n            >Sign In</a-button\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 主体 -->\r\n    <div class=\"main\">\r\n      <Particles\r\n        id=\"tsparticles\"\r\n        :particlesInit=\"particlesInit\"\r\n        :particlesLoaded=\"particlesLoaded\"\r\n        :options=\"particleConfig\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 底部 -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport router from '@/router'\r\nimport particlejs from '@/assets/particles.json'\r\nimport { loadFull } from 'tsparticles'\r\nimport useTimer from '@/utils/useTimer'\r\nexport default {\r\n  setup () {\r\n    // 顶部时间\r\n    const { YMD } = useTimer()\r\n    const currentTime = YMD\r\n\r\n    function handleLogin () {\r\n      router.push('/list')\r\n    }\r\n\r\n    const particleConfig = particlejs\r\n\r\n    const particlesInit = async engine => {\r\n      await loadFull(engine)\r\n    }\r\n\r\n    const particlesLoaded = async container => {\r\n      console.log('Particles container loaded', container)\r\n    }\r\n\r\n    return {\r\n      currentTime,\r\n      handleLogin,\r\n      particleConfig,\r\n      particlesInit,\r\n      particlesLoaded\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.home {\r\n  .header {\r\n    background: #101010;\r\n    .login {\r\n      height: 90px;\r\n      line-height: 90px;\r\n      margin: 0 auto;\r\n      .time {\r\n        font-family: Helvetica, Arial, sans-serif;\r\n        color: #fff;\r\n      }\r\n      .buttons {\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n  .main {\r\n    width: 100%;\r\n    // min-height: 1000px;\r\n    height: calc(100vh - 90px);\r\n    background: #000;\r\n    // background-position: center center;\r\n    // background-repeat: no-repeat;\r\n    // background-size: cover;\r\n    // background-image: linear-gradient(\r\n    //     270deg,\r\n    //     rgba(176, 42, 42, 0.16) 0%,\r\n    //     rgba(176, 42, 42, 0.56) 18.45%,\r\n    //     rgba(176, 42, 42, 0.8) 49.67%,\r\n    //     rgba(176, 42, 42, 0.56) 82.52%,\r\n    //     rgba(176, 42, 42, 0.196364) 99.7%,\r\n    //     rgba(189, 40, 40, 0) 99.71%,\r\n    //     rgba(203, 56, 55, 0) 99.72%,\r\n    //     rgba(203, 56, 55, 0.16) 99.73%\r\n    //   ),\r\n    //   url('../../assets/bg.png');\r\n  }\r\n  .ant-btn-text {\r\n    color: #fff;\r\n    &:hover {\r\n      color: #999;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    var _a;\n    const noEasing = (value) => value;\n    return (_a = easings.get(name)) !== null && _a !== void 0 ? _a : noEasing;\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item) => callback(item)) : callback(obj);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t) => callback(t)) : callback(obj) ? obj : undefined;\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = 0;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e, _f;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_f = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _f !== void 0 ? _f : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = Object.assign(Object.assign({}, fillColor), { a: 1 / trail.length });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.interactivity.mouse.clickPosition = Object.assign({}, mousePos);\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, themeName = mediaEvent.matches\n            ? this.container.options.defaultThemes.dark\n            : this.container.options.defaultThemes.light, theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n","function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n","export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n","import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case 0:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case 1:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n","import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n","import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nfunction fetchError(statusCode) {\n    console.error(`tsParticles - Error ${statusCode} while retrieving config file`);\n}\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    fetchError(response.status);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n","function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n","import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 0;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 1;\n    }\n}\n","import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticleWobble\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    const imageDrawer = new ImageDrawer();\n    await engine.addShape(\"image\", imageDrawer);\n    await engine.addShape(\"images\", imageDrawer);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case 0:\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = 1;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case 1:\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = 0;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = 0;\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = 0;\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = 1;\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const container = this.container, pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(container, pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(container, options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","export class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case 0:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = 1;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case 1:\n            if (particle.size.value <= minValue) {\n                particle.size.status = 0;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape(\"edge\", drawer);\n    await engine.addShape(\"square\", drawer);\n}\n","export class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData, sides = this.getSidesCount(particle), inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation, h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n","export default function timer () {\r\n  // 获取当前时间\r\n  var time_now = new Date()\r\n  var year = time_now.getYear() + 1900 //年\r\n  var month = time_now.getMonth() + 1 //月份\r\n  var day = time_now.getDate() //日\r\n  var hour = time_now.getHours() //小时\r\n  var Min = time_now.getMinutes() //分钟\r\n  var s = time_now.getSeconds() //秒\r\n  if (s < 10) {\r\n    //这个是说 秒如果小于10 前面加个0\r\n    s = '0' + s\r\n  }\r\n  var welcome = '！'\r\n  // 判断时间：0-12点上午 12点到18下午 其他时间是晚上\r\n  if (hour >= 0 && hour < 12) {\r\n    welcome = '上午好' + welcome\r\n  } else if (hour >= 12 && hour <= 18) {\r\n    welcome = '下午好' + welcome\r\n  } else {\r\n    welcome = '晚上好' + welcome\r\n  }\r\n  // 输出\r\n  var YMDHms =\r\n    '今天日期：' +\r\n    year +\r\n    '年' +\r\n    month +\r\n    '月' +\r\n    day +\r\n    '日' +\r\n    '\\xa0\\xa0\\xa0\\xa0' +\r\n    '现在时间：' +\r\n    hour +\r\n    '点' +\r\n    Min +\r\n    '分' +\r\n    s +\r\n    '秒' +\r\n    '\\xa0\\xa0\\xa0\\xa0' +\r\n    welcome\r\n\r\n  let YMD =\r\n    '今天日期：' +\r\n    year +\r\n    '年' +\r\n    month +\r\n    '月' +\r\n    day +\r\n    '日' +\r\n    '\\xa0\\xa0\\xa0\\xa0' +\r\n    welcome\r\n  // document.getElementById(\"time\").innerHTML=print;\t//将print赋值给它\r\n  return { YMDHms, YMD }\r\n}\r\n","import { render } from \"./index.vue?vue&type=template&id=75c08394&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=75c08394&lang=less&scoped=true\"\n\nimport exportComponent from \"D:\\\\liujiao\\\\front-end\\\\editCode.github.io\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-75c08394\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","$setup","_hoisted_5","_createVNode","_component_a_button","size","type","onClick","_hoisted_6","_component_Particles","id","particlesInit","particlesLoaded","options","EventDispatcher","constructor","this","_listeners","Map","addEventListener","listener","_a","removeEventListener","get","set","push","dispatchEvent","args","forEach","handler","hasEventListener","removeAllEventListeners","delete","arr","length","idx","indexOf","splice","Vector3d","xOrCoords","y","z","x","coords3d","undefined","Error","origin","create","angle","Math","atan2","updateFromAngle","sqrt","getLengthSq","static","source","add","v","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","rotate","cos","sin","setTo","c","v3d","subFrom","Vector","super","_random","random","easings","getEasing","name","noEasing","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","enable","minimumValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","getParticleDirectionAngle","direction","position","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcPositionFromSize","data","width","height","calcPositionOrRandomFromSize","_b","_c","_d","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","res","bounced","checkSelector","element","selectors","executeOnSingleOrMultiple","selector","matches","Array","some","t","isSsr","window","document","hasMatchMedia","matchMedia","safeMatchMedia","query","animate","callback","setTimeout","requestAnimationFrame","cancelAnimation","handle","clearTimeout","cancelAnimationFrame","isInArray","array","async","loadFont","font","weight","fonts","load","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","areBoundsInside","calculateBounds","bounds","inside","top","right","left","bottom","deepExtend","destination","sources","sourceIsArray","isArray","key","sourceDict","isObject","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","divMode","divEnabled","singleDivModeExecute","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","resH","resV","obj","item","itemFromSingleOrMultiple","find","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","startsWith","stringPrefix","parseString","shorthandRegex","hexFixed","replace","_","g","b","a","regex","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","hslaToRgba","hsla","rgbResult","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","decay","status","sync","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p3","paintBase","dimension","baseColor","fillStyle","fillRect","clear","clearRect","drawParticle","_e","_f","container","delta","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","stroke","lineWidth","strokeWidth","strokeStyle","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","generatedAttribute","touchEndEvent","mouseDownEvent","mouseUpEvent","mouseMoveEvent","touchStartEvent","touchMoveEvent","mouseLeaveEvent","mouseOutEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","setTransformValue","newFactor","newValue","Canvas","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","attributeName","_repairStyle","_fullScreen","actualOptions","fullScreen","trail","particles","move","paint","_trailFillColor","_paintBase","ctx","destroy","disconnect","remove","_resetOriginalStyle","cb","spawning","destroyed","pfColor","psColor","fColor","sColor","_getPluginParticleColors","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","zOpacity","zStrokeOpacity","_applyPreDrawUpdaters","sizeRate","_applyPostDrawUpdaters","init","resize","_initStyle","_initCover","_initTrail","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","style","backgroundColor","backgroundImage","image","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","particleFillColor","particleStrokeColor","updater","updaters","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","cover","_coverColorStyle","pxRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","refresh","call","updaterTransform","coverRgb","coverColor","_setFullScreenStyle","setProperty","fillColor","originalStyle","priority","toString","manageListener","event","addOptions","passive","capture","removeOptions","EventListeners","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","themeChangeHandler","handleThemeChange","oldThemeChangeHandler","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","doMouseTouchClick","mousePos","interactivity","mouse","clickPosition","clickTime","Date","getTime","events","handleClickMode","mediaEvent","themeName","defaultThemes","dark","light","theme","themes","default","auto","loadTheme","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","resizeTimeout","windowResize","detectType","detectsOn","mouseLeaveTmpEvent","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","pointerEvents","ResizeObserver","resizeObserver","unobserve","entries","entry","target","clicking","downPosition","handled","mousePosition","clickPositionValid","_g","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","initDelta","fpsLimit","smooth","FrameManager","timestamp","lastFrameTime","lifeTime","duration","console","error","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","HoverEvent","parallax","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","count","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","maxSpeed","MovePath","delay","generator","MoveTrail","OutModes","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","AnimationOptions","OpacityAnimation","startValue","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","character","custom","images","polygon","_value","loadShape","mainKey","altKey","altOverride","emptyValue","mainDifferentValues","altDifferentValues","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","autoPlay","detectRetina","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","preset","_importPreset","optResponsive","sort","optTheme","_findDefaultTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","getPreset","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","overrideOptions","override","unbreakable","inRange","slow","particleDestroyed","roll","backColor","alter","backFactor","backSum","rolled","strokeColor","_h","_j","lastPathTime","misplaced","maxDistance","outType","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","shapeOptions","overrideShapeType","shapeData","_loadShapeData","pathOptions","pathDelay","pathGenerator","getPathGenerator","addPath","zIndexValue","initParticle","sizeOptions","sizeRange","sizeAnimation","loops","maxLoops","_calcPosition","initialPosition","canvasSize","moveCenter","isCenterPercent","initialVelocity","_calculateVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","moveOptions","rad","radOffset","range","collisionsOptions","overlapOptions","overlaps","Point","Range","Circle","contains","intersects","rect","circle","distPos","abs","rSum","dist","w","edges","pow","Rectangle","w2","h2","QuadTree","rectangle","capacity","_points","_divided","insert","subdivide","_NE","_NW","_SE","_SW","check","found","queryCircle","queryRectangle","Particles","nextId","zArray","pool","interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","initializer","countToRemove","removeQuantity","_pushParticle","update","particlesInitialization","pathGenerators","groupOptions","i","j","nb","pushing","removeAt","quantity","deleted","zIdx","_applyDensity","particlesToDelete","particleUpdate","externalInteract","particlesInteract","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","densityOptions","pop","canAdd","warn","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGeneratorKey","defaultPathGenerator","generate","Container","_delay","_firstStart","_paused","_sourceOptions","_initialSourceOptions","frameManager","_options","_eventListeners","IntersectionObserver","_intersectionObserver","_intersectionManager","addClickHandler","clickOrTouchHandler","posRetina","clickHandler","touched","touchMoved","changedTouches","radiusX","radiusY","has","stop","keys","mainArr","dom","findIndex","refreshTime","_drawAnimationFrame","nextFrame","exportConfiguration","JSON","stringify","exportImage","quality","toBlob","exportImg","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","Promise","resolve","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","isIntersecting","fetchError","statusCode","getDataFromUrl","jsonUrl","url","response","fetch","ok","json","Loader","tagId","params","remote","loadRemoteOptions","domContainer","getElementById","createElement","querySelector","append","currentOptions","oldIndex","old","domItem","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","newId","newIndex","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","needsPlugin","Engine","_domArray","_eventDispatcher","_initialized","_loader","interactorInitializer","moverInitializer","updaterInitializer","customDrawer","pathConfigJson","loadJSON","instance","setJSON","setOnClickHandler","HslColorManager","RgbColorManager","rgbColor","ExternalInteractorBase","ParticlesInteractorBase","rgbColorManager","hslColorManager","tsParticles","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","dragging","calcPosition","mouseDist","sizeFactor","absorberOrbit","needsNewPosition","updateParticlePosition","translate","arc","newPosition","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","removeAbsorber","AbsorbersPlugin","loadAbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","Destroy","split","DestroyUpdater","destroyOptions","splitCount","destroyBounds","addSplitParticle","parent","splitParticlesOptions","splitOptions","particlesSplitOptions","loadDestroyUpdater","CircleShape","randomPosition","generateTheta","u","theta","atan","tan","randomTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_shape","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","_particlesOptions","_lifeCount","_immortal","emitter","externalPause","externalPlay","elRect","getSize","_emitDelay","prepareToDie","emitParticles","_duration","emit","removeEmitter","singleParticlesOptions","hslAnimation","pPosition","initValue","maxValue","colorOffset","emitFactor","colorSpeed","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","addShape","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","loadEmittersPlugin","addEmitterShape","Trail","pauseOnStop","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","loadExternalTrailInteraction","RollLight","Roll","darken","enlighten","updateRoll","RollUpdater","rollHorizontal","rollVertical","rollOpt","alterType","loadRollUpdater","initPjs","particlesJS","then","catch","pJSDom","RotateAnimation","Rotate","updateAngle","rotateOptions","rotateAnimation","RotateUpdater","rotateDirection","loadAngleUpdater","applyDistance","dxFixed","dyFixed","hDistance","vDistance","vel","maxCanvasSize","applyPath","pathEnabled","getProximitySpeedFactor","BaseMover","gravityOptions","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","baseSpeed","maxSize","speedFactor","diffFactor","gravityFactor","zVelocityFactor","loadBaseMover","addMover","CircleDrawer","loadCircleShape","updateColorValue","valueAnimation","decrease","updateColor","ColorUpdater","loadColorUpdater","Attract","easing","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","hoverAttract","clickAttract","attractRadius","processAttract","attractOptions","attractFactor","normVec","loadExternalAttractInteraction","Bounce","Bouncer","bounceModeDistance","processMouseBounce","singleSelectorBounce","processBounce","tolerance","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","bubbleModeDistance","bubbleModeSize","hoverBubble","clickBubble","singleSelectorHover","divBubble","mouseClickPos","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","particlesObj","process","opacityData","hoverBubbleColor","pointDistance","hoverBubbleSize","hoverBubbleOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","pOpacity","modeSize","optSize","pSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","loadExternalBubbleInteraction","ConnectLinks","Connect","links","lineLinked","line_linked","gradient","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","drawConnectLine","lineStyle","connectOptions","connect","drawConnection","ls","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrabLine","colorLine","drawGrab","lineColor","beginPos","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","particles_nb","Pusher","pushOptions","pushNb","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","repulse","repulseModeDistance","hoverRepulse","clickRepulse","singleSelectorRepulse","divRepulse","repulseDistance","vect","processRepulse","repulseOptions","repulseFactor","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","particlePos","proximityFactor","loadExternalSlowInteraction","currentColorRegex","replaceColorSvg","imageShape","svgData","colorStyle","preFillIndex","substring","loadImage","loading","img","Image","src","downloadSvgImage","text","replaceImageColor","imageData","svgColoredData","imageRes","loaded","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","_images","addImage","containerImages","getImages","globalAlpha","drawImage","loadImageShape","imageFunc","imageDrawer","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","delayTime","time","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","loadLineShape","checkDestroy","minValue","updateOpacity","OpacityUpdater","opacityOptions","opacityAnimation","opacityRange","loadOpacityUpdater","bounceHorizontal","newVelocity","minPos","bounceVertical","BounceOutMode","particleBounce","DestroyOutMode","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","updateOutMode","loadOutModesUpdater","ParallaxMover","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","deleteP","resolveCollision","Collider","radius1","radius2","round","distP","loadParticlesCollisionsInteraction","CircleWarp","posNE","posSE","posSW","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","pos2NE","pos2SE","pos2SW","Linker","linkContainer","linksColors","linkOpt1","linksDistance","linkOpt2","setColor","linksColor","loadInteraction","drawLinkLine","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkTriangle","pos3","colorTriangle","opacityTriangle","getLinkKey","join","setLinkFrequency","dictionary","LinkInstance","_freqs","pOptions","p1Links","getLinkFrequency","link","drawTriangles","twinkle","lines","twinkleFreq","twinkleRgb","twinkling","link1","link2","triangleOptions","vertices","linkFreq","vertex","triangleFreq","getTriangleFrequency","LinksPlugin","loadPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","updateSize","sizeVelocity","SizeUpdater","loadSizeUpdater","fixFactor","SquareDrawer","loadSquareShape","StarDrawer","star","inset","loadStarShape","updateStrokeColor","_k","StrokeColorUpdater","strokeHslColor","loadStrokeColorUpdater","validTypes","TextDrawer","textData","textParticle","randomIndexData","fillText","strokeText","promises","all","loadTextShape","loadSlim","TiltAnimation","Tilt","updateTilt","tilt","tiltAnimation","TiltUpdater","cosDirection","sinDirection","tiltOptions","tiltDirection","loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","updateWobble","wobble","angleSpeed","wobbleDistance","WobbleUpdater","wobbleOpt","loadWobbleUpdater","loadFull","timer","time_now","year","getYear","month","getMonth","day","getDate","hour","getHours","Min","getMinutes","getSeconds","welcome","YMDHms","YMD","setup","useTimer","currentTime","handleLogin","router","particleConfig","particlejs","log","__exports__","render"],"sourceRoot":""}